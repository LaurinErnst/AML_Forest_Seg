from PIL import Image
from skimage.segmentation import felzenszwalb
from scipy import ndimage
import numpy as np

def naive_seg(i):
    image = imageloader(i)
    img = image/255
    img_gray = np.array(Image.open("images/"+str(i)+".jpg").convert("L"))
    img_gray_avg = ndimage.uniform_filter(img_gray,size=8,mode="mirror")
    segments = felzenszwalb(img_gray, scale=70, sigma=0.5, min_size=50)
    mask=np.zeros((256,256))
    for j in range(len(np.unique(segments))):
        bool_array = segments==j
        single_segment=img_gray_avg[bool_array]
        brightness = np.average(single_segment)
        single_segment=single_segment.flatten()
        single_segment=single_segment[single_segment!=0]
        std=np.std(single_segment)
        if std>4  and brightness<110:
            mask[bool_array]=255
    mask=np.uint8(mask)
    
    return(mask)